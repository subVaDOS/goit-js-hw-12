{"version":3,"file":"index.js","sources":["../src/js/pixabay-api.js","../src/js/render-functions.js","../src/main.js"],"sourcesContent":["// Імпортуємо бібліотеку axios для виконання HTTP-запитів\nimport axios from 'axios';\n\n// Базова URL-адреса для запитів до API Pixabay\nconst BASE_URL = 'https://pixabay.com/api/';\n\n// Унікальний ключ доступу до API (отримується після реєстрації на Pixabay)\nconst API_KEY = '50197022-5c303e37ac1e7741936867a9a';\n\n// Встановлюємо базову адресу для всіх запитів axios\naxios.defaults.baseURL = BASE_URL;\n\n// Встановлюємо стандартні параметри запиту, які будуть використовуватись автоматично:\naxios.defaults.params = {\n  key: API_KEY, // Ключ доступу до API\n  image_type: 'photo', // Тип зображень (тільки фотографії)\n  orientation: 'horizontal', // Орієнтація зображення (горизонтальна)\n  safesearch: true, // Включення безпечного пошуку (виключає 18+ контент)\n  per_page: 15, // Кількість зображень на одну сторінку\n};\n\n/**\n * Асинхронна функція для отримання зображень за пошуковим запитом\n * @param {string} query - Пошукове слово або фраза\n * @param {number} page - Номер сторінки (для пагінації)\n * @returns {Promise<Object>} - Повертає об'єкт з даними (масив hits + totalHits)\n */\nexport async function getImagesByQuery(query, page) {\n  // Робимо GET-запит до базової URL з додатковими параметрами: q (запит) та page (сторінка)\n  const response = await axios.get('', { params: { q: query, page: page } });\n\n  // Повертаємо лише ті дані, які потрібні (масив зображень та загальна кількість)\n  return response.data;\n}\n","// Імпортуємо бібліотеку SimpleLightbox для перегляду зображень у модальному вікні\nimport SimpleLightbox from 'simplelightbox';\nimport 'simplelightbox/dist/simple-lightbox.min.css';\n\n// Ініціалізуємо SimpleLightbox на всіх посиланнях у галереї\nconst lightbox = new SimpleLightbox('.gallery a', {\n  captionsData: 'alt', // Використовуємо значення атрибуту alt для підпису зображення\n  captionDelay: 200, // Затримка перед показом підпису в мілісекундах\n});\n\n/**\n * Функція створює та додає HTML-розмітку для зображень у галерею\n * @param {Array} images - масив об'єктів зображень\n * @param {HTMLElement} galleryElem - DOM-елемент галереї, куди вставляється розмітка\n */\nexport function createGallery(images, galleryElem) {\n  // Генеруємо HTML для кожного зображення\n  const markup = images\n    .map(\n      ({\n        webformatURL, // URL мініатюри\n        largeImageURL, // URL великого зображення\n        type, // тип зображення (наприклад, фото)\n        tags, // ключові слова (використовуються в alt)\n        likes,\n        views,\n        comments,\n        downloads,\n      }) =>\n        `<li class=\"gallery-item js-gallery-item\">\n  <a class=\"gallery-link js-gallery-link\" href=\"${largeImageURL}\">\n    <div class=\"image-wrapper\">\n      <img\n        class=\"gallery-image js-gallery-image\"\n        src=\"${webformatURL}\"\n        data-source=\"${type}\"\n        alt=\"${tags}\"\n      />\n    </div>\n  \n  <div>\n    <ul class=\"wrapper-box\">\n      <li class=\"list-item\">\n        <p class=\"value-title\">Likes</p>\n        <p class=\"label\" data-likes>${likes}</p>\n      </li>\n      <li class=\"list-item\">\n        <p class=\"value-title\">Views</p>\n        <p class=\"label\" data-views>${views}</p>\n      </li>\n      <li class=\"list-item\">\n        <p class=\"value-title\">Comments</p>\n        <p class=\"label\" data-comments>${comments}</p>\n      </li>\n      <li class=\"list-item\">\n        <p class=\"value-title\">Downloads</p>\n        <p class=\"label\" data-downloads>${downloads}</p>\n      </li>\n    </ul>\n  </div>\n  </a>\n</li>`\n    )\n    .join(''); // Об’єднуємо всі рядки в єдиний HTML-код\n\n  // Додаємо готову розмітку в кінець елемента галереї\n  galleryElem.insertAdjacentHTML('beforeend', markup);\n\n  // Оновлюємо інстанс SimpleLightbox, щоб він працював із новими елементами\n  lightbox.refresh();\n}\n\n/**\n * Очищає вміст галереї\n * @param {HTMLElement} galleryElem - DOM-елемент галереї\n */\nexport function clearGallery(galleryElem) {\n  galleryElem.innerHTML = ''; // Повністю видаляє розмітку всередині галереї\n}\n\n/**\n * Показує елемент завантаження (loader)\n * @param {HTMLElement} loaderElem - DOM-елемент лоудера\n */\nexport function showLoader(loaderElem) {\n  loaderElem.classList.remove('is-hidden'); // Видаляє клас, що приховує лоудер\n}\n\n/**\n * Приховує елемент завантаження (loader)\n * @param {HTMLElement} loaderElem - DOM-елемент лоудера\n */\nexport function hideLoader(loaderElem) {\n  loaderElem.classList.add('is-hidden'); // Додає клас, що приховує лоудер\n}\n\n/**\n * Показує кнопку \"Завантажити ще\"\n * @param {HTMLElement} fetchPostsBtn - DOM-елемент кнопки\n */\nexport function showLoadMoreBtn(fetchPostsBtn) {\n  fetchPostsBtn.classList.remove('is-hidden'); // Робить кнопку видимою\n}\n\n/**\n * Приховує кнопку \"Завантажити ще\"\n * @param {HTMLElement} fetchPostsBtn - DOM-елемент кнопки\n */\nexport function hideLoadMoreBtn(fetchPostsBtn) {\n  fetchPostsBtn.classList.add('is-hidden'); // Приховує кнопку\n}\n","// Імпортуємо бібліотеку повідомлень iziToast та її стилі\nimport iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\n// Імпортуємо функцію запиту до Pixabay API\nimport { getImagesByQuery } from './js/pixabay-api';\n\n// Імпортуємо утиліти для створення галереї, керування loader'ом та кнопками\nimport {\n  createGallery,\n  showLoader,\n  hideLoader,\n  clearGallery,\n  showLoadMoreBtn,\n  hideLoadMoreBtn,\n} from './js/render-functions';\n\n// Отримуємо посилання на DOM-елементи\nconst form = document.querySelector('.form'); // Форма пошуку\nconst input = document.querySelector('[name=\"search-text\"]'); // Поле введення\nconst galleryElem = document.querySelector('.gallery'); // Галерея зображень\nconst loaderElem = document.querySelector('.loader'); // Анімація завантаження\nconst fetchPostsBtn = document.querySelector('.js-load-more'); // Кнопка \"Завантажити ще\"\nconst showErrorMessage = document.querySelector('.js-error-message'); // Повідомлення про помилку\nconst showLoadingMessage = document.querySelector('.js-loading-message'); // Повідомлення про завантаження\n\n// Ініціалізуємо змінні для зберігання поточної сторінки, запиту та кількості результатів\nlet page = 1;\nlet searchQuery = '';\nlet totalHits = 0;\n\n// Додаємо слухачі подій: надсилання форми і натискання кнопки \"Завантажити ще\"\nform.addEventListener('submit', onSubmitForm);\nfetchPostsBtn.addEventListener('click', onLoadMore);\n\n// Функція для завантаження додаткових результатів\nfunction onLoadMore(event) {\n  event.preventDefault(); // Забороняємо стандартну поведінку кнопки\n  page += 1; // Збільшуємо номер сторінки\n\n  hideLoadMoreBtn(fetchPostsBtn); // Ховаємо кнопку \"Завантажити ще\"\n  showLoadingMessage.classList.remove('is-hidden'); // Показуємо повідомлення \"Завантаження...\"\n\n  // Отримуємо зображення за поточним запитом і сторінкою\n  getImagesByQuery(searchQuery, page)\n    .then(data => {\n      const images = data.hits;\n\n      // Якщо нових зображень немає — виводимо повідомлення і припиняємо\n      if (images.length === 0) {\n        iziToast.error({\n          title: 'Caution',\n          message: \"We're sorry, but you've reached the end of search results.\",\n          position: 'topRight',\n          timeout: 3000,\n        });\n        showErrorMessage.classList.remove('is-hidden');\n        return;\n      }\n\n      // Додаємо зображення до галереї\n      createGallery(images, galleryElem);\n\n      // Обчислюємо загальну кількість сторінок\n      const totalPages = Math.ceil(totalHits / 15);\n\n      // Якщо ще є сторінки — показуємо кнопку \"Завантажити ще\"\n      if (page < totalPages) {\n        showLoadMoreBtn(fetchPostsBtn);\n      } else {\n        // Інакше повідомляємо користувача, що це кінець результатів\n        iziToast.info({\n          title: 'Info',\n          message: \"We're sorry, but you've reached the end of search results.\",\n          position: 'topRight',\n          timeout: 3000,\n        });\n      }\n\n      // Прокрутка сторінки до нових зображень\n      const { height: cardHeight } = document\n        .querySelector('.gallery')\n        .firstElementChild.getBoundingClientRect();\n\n      window.scrollBy({\n        top: cardHeight * 2,\n        behavior: 'smooth',\n      });\n    })\n    .catch(error => {\n      // Обробка помилки запиту\n      iziToast.error({\n        title: 'Error',\n        message: 'Failed to load more images. Please try again.',\n        position: 'topRight',\n        timeout: 3000,\n      });\n      showErrorMessage.classList.remove('is-hidden');\n    })\n    .finally(() => {\n      // Приховуємо повідомлення \"Завантаження...\" у будь-якому випадку\n      showLoadingMessage.classList.add('is-hidden');\n    });\n}\n\n// Обробник події надсилання форми\nfunction onSubmitForm(event) {\n  event.preventDefault(); // Забороняємо перезавантаження сторінки\n  searchQuery = input.value.trim(); // Отримуємо текст запиту\n  page = 1; // Скидаємо сторінку на 1\n  totalHits = 0; // Скидаємо кількість результатів\n\n  clearGallery(galleryElem); // Очищуємо галерею\n  hideLoadMoreBtn(fetchPostsBtn); // Ховаємо кнопку \"Завантажити ще\"\n  showErrorMessage.classList.add('is-hidden'); // Приховуємо повідомлення про помилку\n  showLoader(loaderElem); // Показуємо loader\n\n  // Якщо запит порожній — показуємо повідомлення і припиняємо\n  if (!searchQuery) {\n    hideLoader(loaderElem);\n    return iziToast.error({\n      title: 'Caution',\n      message: 'Please enter a search query.',\n      position: 'topRight',\n      timeout: 3000,\n    });\n  }\n\n  // Отримуємо зображення з Pixabay API\n  getImagesByQuery(searchQuery, page)\n    .then(data => {\n      const images = data.hits; // Масив зображень\n      totalHits = data.totalHits; // Загальна кількість знайдених зображень\n\n      // Якщо нічого не знайдено — виводимо повідомлення\n      if (images.length === 0) {\n        iziToast.error({\n          title: 'Caution',\n          message:\n            'Sorry, there are no images matching your search query. Please try again!',\n          position: 'topRight',\n          timeout: 3000,\n        });\n        showErrorMessage.classList.remove('is-hidden');\n        return;\n      }\n\n      // Створюємо галерею з отриманих зображень\n      createGallery(images, galleryElem);\n\n      // Якщо результатів більше 15 — показуємо кнопку \"Завантажити ще\"\n      if (totalHits > 15) {\n        showLoadMoreBtn(fetchPostsBtn);\n      }\n    })\n    .catch(error => {\n      // Обробка помилки при запиті\n      iziToast.error({\n        title: 'Error',\n        message: 'Something went wrong. Please try again later.',\n        position: 'topRight',\n        timeout: 3000,\n      });\n    })\n    .finally(() => {\n      hideLoader(loaderElem); // Приховуємо loader\n      form.reset(); // Очищаємо поле введення\n    });\n}\n"],"names":["BASE_URL","API_KEY","axios","getImagesByQuery","query","page","lightbox","SimpleLightbox","createGallery","images","galleryElem","markup","webformatURL","largeImageURL","type","tags","likes","views","comments","downloads","clearGallery","showLoader","loaderElem","hideLoader","showLoadMoreBtn","fetchPostsBtn","hideLoadMoreBtn","form","input","showErrorMessage","showLoadingMessage","searchQuery","totalHits","onSubmitForm","onLoadMore","event","data","iziToast","totalPages","cardHeight","error"],"mappings":"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"}